-- Users Table (already exists based on your context)
CREATE TABLE users (
    id INT(11) AUTO_INCREMENT PRIMARY KEY,
    email VARCHAR(100) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,
    profile_pic VARCHAR(255) DEFAULT 'default.png';
);

-- Profile Info Table
CREATE TABLE user_info (
    user_id INT(11) PRIMARY KEY,
    full_name VARCHAR(100),
    gender ENUM('Male', 'Female', 'Other'),
    age INT,
    religion VARCHAR(50),
    country VARCHAR(50),
    height VARCHAR(10),
    weight FLOAT,
    skin_tone ENUM('Fair', 'Brown', 'Black'),
    education VARCHAR(100),
    occupation VARCHAR(100),
    salary INT,
    bio VARCHAR(250),
    profile_pic VARCHAR(255),
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);

-- Family Info Table
CREATE TABLE family_info (
    user_id INT(11) PRIMARY KEY,
    father_name VARCHAR(100),
    father_occupation VARCHAR(100),
    father_education VARCHAR(100),
    mother_name VARCHAR(100),
    mother_occupation VARCHAR(100),
    mother_education VARCHAR(100),
    brother_name VARCHAR(100),
    brother_occupation VARCHAR(100),
    brother_education VARCHAR(100),
    sister_name VARCHAR(100),
    sister_occupation VARCHAR(100),
    sister_education VARCHAR(100),
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);

-- Requirement Info Table
CREATE TABLE partner_requirement (
    user_id INT(11) PRIMARY KEY,
    gender ENUM('Male', 'Female', 'Other'),
    country VARCHAR(50),
    religion VARCHAR(50),
    occupation VARCHAR(100),
    min_salary INT,
    min_height VARCHAR(10),
    skin_tone ENUM('Fair', 'Brown', 'Black'),
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);


-- Notifications Table (simplified)
CREATE TABLE notifications (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT,
    match_user_id INT,
    message TEXT,
    seen BOOLEAN DEFAULT FALSE,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
    FOREIGN KEY (match_user_id) REFERENCES users(id) ON DELETE CASCADE
);